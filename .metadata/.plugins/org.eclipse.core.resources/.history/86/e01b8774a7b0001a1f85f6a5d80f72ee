package week2.day1.zoho;
import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import org.testng.annotations.Test;
import static io.restassured.RestAssured.given;

public class OAUTH2GrantTypeTestCase {
	 String oauth_token ;    
	    @Test
	        public void sampletest() {
	            oauth_token = RestAssured.given().auth().basic("username", "password").

	                     .queryParams("client_id", "client_id_value")
	                     .queryParams("client_secret", "client_secret_value")
	                     .queryParams("grant_type", "authorization_code")
	                     .queryParams("redirect_uri", "https://someuritoredirect")
	                     .queryParams("otherparams", "sampleparam")
	                   .when().get("https://uri.to.get.hostname.com/oauth2/access_token")
	                     .then()
	                     .statusCode(200)
	                     .extract().header("access_token");
	        }

    @Test
    public void oauth2GrantTypeTestCase() {
    	String clientid = "1000.RDXLRMR7U4GO4ISGGREI3XR4SESMVH";
    	String secret = "9539b4bc3cc0c9ffe896d218087c088215020fd628";
        Response response =
         given().header("Authorization",clientid+":"+secret)
		.contentType("application/x-www-form-urlencoded")
		.formParam("grant_type","authorization_code")                                                   
		.formParam("redirect_uri","http://www.zoho.com/subscriptions")
		.formParam("response_type","code")
		.formParam("code", AUTHORIZATION_CODE)
		.formParam("client_id", clientid)
		.formParam("client_secret", secret)
		 .when()
		 .post("https://accounts.zoho.com/oauth/v2/token");
        JsonPath jsonPath = response.jsonPath();
		
		jsonPath.prettyPrint();
		
 //JSONObject jsonObject = new JSONObject(response.getBody().asString());
String accessToken = jsonPath.get("access_token").toString();
String tokenType = jsonPath.get("token_type").toString();
log.info("Oauth Token with type " + tokenType + "   " + accessToken);
      
    }
}